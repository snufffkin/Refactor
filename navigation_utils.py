"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏.
"""

import streamlit as st
import json
import urllib.parse as ul
import os
import base64

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
def get_image_base64(image_path):
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É base64 –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
    
    Args:
        image_path (str): –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        
    Returns:
        str: –°—Ç—Ä–æ–∫–∞ base64
    """
    if not os.path.exists(image_path):
        return ""
        
    with open(image_path, "rb") as image_file:
        encoded_string = base64.b64encode(image_file.read()).decode()
    
    return encoded_string

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HTML-–∫–æ–¥–∞ SVG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
def get_svg_html(svg_path, width=24, height=24, transform=None):
    """
    –ü–æ–ª—É—á–∞–µ—Ç HTML-–∫–æ–¥ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è SVG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    
    Args:
        svg_path (str): –ü—É—Ç—å –∫ SVG —Ñ–∞–π–ª—É
        width (int): –®–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        height (int): –í—ã—Å–æ—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        transform (str): CSS-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –ø–æ–≤–æ—Ä–æ—Ç–∞)
        
    Returns:
        str: HTML-–∫–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    """
    svg_base64 = get_image_base64(svg_path)
    if not svg_base64:
        return ""
        
    transform_style = f"transform: {transform};" if transform else ""
    return f"""
    <img src="data:image/svg+xml;base64,{svg_base64}" 
         width="{width}" height="{height}" 
         style="vertical-align: middle; {transform_style}">
    """

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
def init_navigation_history():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ session_state"""
    if "nav_history" not in st.session_state:
        st.session_state.nav_history = []
    if "nav_history_position" not in st.session_state:
        st.session_state.nav_history_position = -1
    if "current_nav_params" not in st.session_state:
        st.session_state.current_nav_params = {}

def add_to_history(params):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    
    Args:
        params: –°–ª–æ–≤–∞—Ä—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    init_navigation_history()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º params –≤ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
    params_dict = dict(params)
    
    # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤ –∏—Å—Ç–æ—Ä–∏–∏
    if not st.session_state.nav_history or params_dict != st.session_state.nav_history[-1]:
        # –ï—Å–ª–∏ –º—ã –Ω–µ –≤ –∫–æ–Ω—Ü–µ –∏—Å—Ç–æ—Ä–∏–∏, —É–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏
        if st.session_state.nav_history_position < len(st.session_state.nav_history) - 1:
            st.session_state.nav_history = st.session_state.nav_history[:st.session_state.nav_history_position + 1]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é
        st.session_state.nav_history.append(params_dict)
        st.session_state.nav_history_position = len(st.session_state.nav_history) - 1
        st.session_state.current_nav_params = params_dict

def navigate_back():
    """
    –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    
    Returns:
        bool: True, –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω, –∏–Ω–∞—á–µ False
    """
    init_navigation_history()
    
    print(f"navigation_utils.navigate_back: history_position={st.session_state.nav_history_position}, history_size={len(st.session_state.nav_history)}")
    print(f"navigation_utils.navigate_back: history={st.session_state.nav_history}")
    
    if st.session_state.nav_history_position > 0:
        st.session_state.nav_history_position -= 1
        params = st.session_state.nav_history[st.session_state.nav_history_position]
        print(f"navigation_utils.navigate_back: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ params={params}")
        st.query_params.clear()
        for key, value in params.items():
            st.query_params[key] = value
        return True
    
    print("navigation_utils.navigate_back: –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –∏–ª–∏ –º—ã –≤ –Ω–∞—á–∞–ª–µ")
    return False

def navigate_forward():
    """
    –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    
    Returns:
        bool: True, –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω, –∏–Ω–∞—á–µ False
    """
    init_navigation_history()
    
    if st.session_state.nav_history_position < len(st.session_state.nav_history) - 1:
        st.session_state.nav_history_position += 1
        params = st.session_state.nav_history[st.session_state.nav_history_position]
        st.query_params.clear()
        for key, value in params.items():
            st.query_params[key] = value
        return True
    return False

def create_page_link(page, **params):
    """
    –°–æ–∑–¥–∞–µ—Ç URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    
    Args:
        page (str): –ò–º—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
        **params: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
        
    Returns:
        str: URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    """
    base_url = "?"
    all_params = {"page": page}
    all_params.update(params)
    
    param_strings = []
    for key, value in all_params.items():
        if value is not None:
            param_strings.append(f"{key}={ul.quote_plus(str(value))}")
    
    return base_url + "&".join(param_strings)

def navigate_to(page, **params):
    """
    –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
    
    Args:
        page (str): –ò–º—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
        **params: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
    """
    # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    st.query_params.clear()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    st.query_params["page"] = page
    for key, value in params.items():
        if value is not None:
            st.query_params[key] = value
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    st.rerun()

def navigation_bar():
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏: –Ω–∞–∑–∞–¥, –≤–ø–µ—Ä–µ–¥, –¥–æ–º–æ–π
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ session_state
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    init_navigation_history()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é
    add_to_history(st.query_params)
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–ª–∞—Å—Å–æ–º –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
    st.markdown('<div class="nav-container">', unsafe_allow_html=True)
    
    col1, col2, col3, col4 = st.columns([1, 1, 1, 10])
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Unicode-—Å–∏–º–≤–æ–ª—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
    back_icon = "‚¨ÖÔ∏è"    # –°—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ
    forward_icon = "‚û°Ô∏è"  # –°—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ
    home_icon = "üè†"     # –î–æ–º
    
    with col1:
        back_disabled = st.session_state.nav_history_position <= 0
        if st.button(back_icon, disabled=back_disabled, key="nav_back_btn", use_container_width=True):
            navigate_back()
            st.rerun()
            
    with col2:
        forward_disabled = st.session_state.nav_history_position >= len(st.session_state.nav_history) - 1
        if st.button(forward_icon, disabled=forward_disabled, key="nav_forward_btn", use_container_width=True):
            navigate_forward()
            st.rerun()
            
    with col3:
        if st.button(home_icon, key="nav_home_btn", use_container_width=True):
            # Navigating to home page using our navigation system
            navigate_to("overview")
            
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    with col4:
        current_page_display = st.session_state.get("page", "–û–±–∑–æ—Ä").replace("‚öôÔ∏è ", "")
        st.markdown(f"<div style='margin-top:8px;'>üìç <b>{current_page_display}</b></div>", unsafe_allow_html=True)
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    st.markdown('</div>', unsafe_allow_html=True)

def sidebar_navigation():
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —Å–∞–π–¥–±–∞—Ä–∞
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    init_navigation_history()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é
    add_to_history(st.query_params)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —Å–∞–π–¥–±–∞—Ä–µ
    with st.sidebar:
        st.markdown('<div class="sidebar-nav-container">', unsafe_allow_html=True)
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º Unicode-—Å–∏–º–≤–æ–ª—ã –≤–º–µ—Å—Ç–æ SVG –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        back_icon = "‚¨ÖÔ∏è"    # –°—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ
        forward_icon = "‚û°Ô∏è"  # –°—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ
        home_icon = "üè†"     # –î–æ–º
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            back_disabled = st.session_state.nav_history_position <= 0
            if st.button(back_icon, disabled=back_disabled, key="sidebar_nav_back_btn", use_container_width=True):
                navigate_back()
                st.rerun()
                
        with col2:
            forward_disabled = st.session_state.nav_history_position >= len(st.session_state.nav_history) - 1
            if st.button(forward_icon, disabled=forward_disabled, key="sidebar_nav_forward_btn", use_container_width=True):
                navigate_forward()
                st.rerun()
                
        with col3:
            if st.button(home_icon, key="sidebar_nav_home_btn", use_container_width=True):
                # Navigating to home page using our navigation system
                navigate_to("overview")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        current_page_display = st.session_state.get("page", "–û–±–∑–æ—Ä").replace("‚öôÔ∏è ", "")
        st.markdown(f"""
        <div style='text-align: center; margin: 8px 0; padding: 5px;
                   background-color: rgba(28, 131, 225, 0.1); 
                   border-radius: 4px;
                   font-size: 14px;'>
            üìç <b>{current_page_display}</b>
        </div>
        """, unsafe_allow_html=True)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        st.markdown("<hr style='margin: 15px 0 20px; opacity: 0.2;'>", unsafe_allow_html=True)
        
        st.markdown('</div>', unsafe_allow_html=True)

def back_button(page=None, **params):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥" —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏
    
    Args:
        page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ (None - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é)
        **params: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Unicode-—Å–∏–º–≤–æ–ª –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
    back_icon = "‚¨ÖÔ∏è"    # –°—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ
    
    if st.button(f"{back_icon} –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"):
        if page:
            # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            navigate_to(page, **params)
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            navigate_back()
            st.rerun()

def navigation_link(text, page, **params):
    """
    –°–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    
    Args:
        text: –¢–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
        page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
        **params: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
    """
    url = create_page_link(page, **params)
    if st.markdown(f"[{text}]({url})", unsafe_allow_html=True):
        # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞–∂–∞—Ç–∞ (–≤ Streamlit —ç—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é),
        # –Ω–æ –º—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å HTML-–≤–µ—Ä—Å–∏–µ–π
        navigate_to(page, **params)

def handle_navigation_event(event_type, **params):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    
    Args:
        event_type (str): –¢–∏–ø —Å–æ–±—ã—Ç–∏—è ('back', 'forward', 'home', 'navigate')
        **params: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–µ—Å–ª–∏ event_type='navigate')
    """
    if event_type == 'back':
        if navigate_back():
            st.rerun()
    elif event_type == 'forward':
        if navigate_forward():
            st.rerun()
    elif event_type == 'home':
        navigate_to("overview")
    elif event_type == 'navigate':
        if 'page' in params:
            page = params.pop('page')
            navigate_to(page, **params)
        else:
            st.error("–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è")
    else:
        st.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è: {event_type}")
        
def show_navigation_debug():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ–±–∞–≥-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    init_navigation_history()
    
    with st.expander("üîç –î–µ–±–∞–≥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏", expanded=False):
        st.write("–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:")
        
        # –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not st.session_state.nav_history:
            st.info("–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø—É—Å—Ç–∞")
            return
            
        # –¢–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        history_data = []
        for i, params in enumerate(st.session_state.nav_history):
            is_current = i == st.session_state.nav_history_position
            page = params.get("page", "N/A")
            other_params = {k: v for k, v in params.items() if k != "page"}
            
            # –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
            position_mark = "‚ñ∂Ô∏è " if is_current else ""
            
            history_data.append({
                "–ü–æ–∑–∏—Ü–∏—è": f"{position_mark}{i+1}",
                "–°—Ç—Ä–∞–Ω–∏—Ü–∞": page,
                "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã": str(other_params)
            })
        
        # –í—ã–≤–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É —Å –∏—Å—Ç–æ—Ä–∏–µ–π
        st.table(history_data)

def get_history_size():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    
    Returns:
        int: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    init_navigation_history()
    return len(st.session_state.nav_history) 