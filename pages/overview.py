# pages/overview.py
"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–∑–æ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import numpy as np

import core
from components.metrics import display_metrics_row, display_status_chart, display_risk_distribution
from components.charts import display_risk_bar_chart, display_metrics_comparison, display_success_complaints_chart

def page_overview(df: pd.DataFrame):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–±–∑–æ—Ä–æ–º –≤—Å–µ—Ö –ø—Ä–æ–≥—Ä–∞–º–º"""
    st.header("üìä –û–±–∑–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    with st.expander("‚ÑπÔ∏è –û –¥–∞—à–±–æ—Ä–¥–µ", expanded=False):
        st.markdown("""
        ### –î–∞—à–±–æ—Ä–¥ –∫–∞—á–µ—Å—Ç–≤–∞ –∫—É—Ä—Å–æ–≤
        
        –≠—Ç–æ—Ç –¥–∞—à–±–æ—Ä–¥ –ø–æ–º–æ–≥–∞–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö:
        - **–ü—Ä–æ–≥—Ä–∞–º–º—ã**: –û–±—â–∏–π –æ–±–∑–æ—Ä –≤—Å–µ—Ö –ø—Ä–æ–≥—Ä–∞–º–º
        - **–ú–æ–¥—É–ª–∏**: –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –º–æ–¥—É–ª—è–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
        - **–£—Ä–æ–∫–∏**: –ê–Ω–∞–ª–∏–∑ —É—Ä–æ–∫–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–æ–¥—É–ª–µ
        - **–ì—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π (–ì–ó)**: –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –≥—Ä—É–ø–ø–∞–º –∑–∞–¥–∞–Ω–∏–π –≤ —É—Ä–æ–∫–µ
        - **–ö–∞—Ä—Ç–æ—á–∫–∏**: –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —É—Ä–æ–≤–Ω—è–º.
        
        **–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏**:
        - **–£—Å–ø–µ—à–Ω–æ—Å—Ç—å**: –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
        - **–ñ–∞–ª–æ–±—ã**: –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–¥–∞–Ω–∏–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏ –∂–∞–ª–æ–±—ã
        - **–î–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ç–∏–≤–Ω–æ—Å—Ç—å**: –ü–æ–∫–∞–∑–∞—Ç–µ–ª—å —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–∞—Ç—å –∑–Ω–∞—é—â–∏—Ö/–Ω–µ–∑–Ω–∞—é—â–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        - **–†–∏—Å–∫**: –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –ø—Ä–æ–±–ª–µ–º–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è (–≤—ã—à–µ = —Ö—É–∂–µ)
        """)
    
    # 1. –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏
    st.subheader("üìà –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏")
    display_metrics_row(df)
    
    # 2. –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞
    col1, col2 = st.columns(2)
    
    with col1:
        # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        display_risk_distribution(df, "program")
    
    with col2:
        # –°—Ç–∞—Ç—É—Å—ã –∫–∞—Ä—Ç–æ—á–µ–∫
        display_status_chart(df, "card_id")
    
    # 3. –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –≤–∏–¥–µ —Ç—Ä–∏–º–∞–ø–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞
    col1, col2 = st.columns([3, 2])
    
    with col1:
        # Treemap –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º
        agg = core.agg_by(df, "program")
        fig = px.treemap(
            agg, 
            path=["program"], 
            values="cards", 
            color="risk", 
            color_continuous_scale="RdYlGn_r",
            hover_data=["success", "complaints"]
        )
        
        # –£–ª—É—á—à–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–æ–¥—Å–∫–∞–∑–æ–∫
        fig.update_traces(
            hovertemplate="<b>%{label}</b><br>" +
                          "–ö–∞—Ä—Ç–æ—á–µ–∫: %{value}<br>" +
                          "–†–∏—Å–∫: %{color:.2f}<br>" +
                          "–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: %{customdata[0]:.1%}<br>" +
                          "–ñ–∞–ª–æ–±—ã: %{customdata[1]:.1%}"
        )
        
        st.plotly_chart(fig, use_container_width=True)
    
    with col2:
        # –¢–æ–ø –ø—Ä–æ–≥—Ä–∞–º–º —Å –≤—ã—Å–æ–∫–∏–º —Ä–∏—Å–∫–æ–º
        high_risk_programs = display_risk_bar_chart(
            df, 
            "program", 
            title="–¢–æ–ø –ø—Ä–æ–≥—Ä–∞–º–º –ø–æ —É—Ä–æ–≤–Ω—é —Ä–∏—Å–∫–∞"
        )
    
    # 4. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º
    st.subheader("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º")
    
    tab1, tab2 = st.tabs(["–£—Å–ø–µ—à–Ω–æ—Å—Ç—å –∏ –∂–∞–ª–æ–±—ã", "–ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º"])
    
    with tab1:
        # –ì—Ä–∞—Ñ–∏–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∏ –∂–∞–ª–æ–±
        display_success_complaints_chart(df, "program", limit=20)
    
    with tab2:
        # –ì—Ä–∞—Ñ–∏–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–µ—Ç—Ä–∏–∫
        display_metrics_comparison(
            df,
            "program",
            ["success_rate", "complaint_rate", "discrimination_avg", "risk"],
            limit=10
        )
    
    # 5. –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
    st.subheader("üìö –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º
    agg = core.agg_by(df, "program")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
    st.dataframe(
        agg.style.format({
            "success": "{:.1%}", 
            "complaints": "{:.1%}", 
            "risk": "{:.2f}"
        }),
        use_container_width=True
    )
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º
    from components.utils import display_clickable_items
    display_clickable_items(df, "program", "program", metrics=["cards", "risk", "success"])
    
    # 6. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É", value=False):
        st.subheader("üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –æ–±—â–µ–≥–æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫
        status_counts = df["status"].value_counts().reset_index()
        status_counts.columns = ["–°—Ç–∞—Ç—É—Å", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
        
        fig = px.pie(
            status_counts, 
            values="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", 
            names="–°—Ç–∞—Ç—É—Å",
            title="–û–±—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º",
            color="–°—Ç–∞—Ç—É—Å",
            color_discrete_map={
                "new": "#d3d3d3",
                "in_work": "#add8e6",
                "ready_for_qc": "#fffacd",
                "done": "#90ee90",
                "wont_fix": "#f08080"
            }
        )
        
        st.plotly_chart(fig, use_container_width=True)
        
        # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫
        if "card_type" in df.columns:
            card_type_counts = df["card_type"].value_counts().reset_index()
            card_type_counts.columns = ["–¢–∏–ø –∫–∞—Ä—Ç–æ—á–∫–∏", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
            
            fig = px.bar(
                card_type_counts,
                x="–¢–∏–ø –∫–∞—Ä—Ç–æ—á–∫–∏",
                y="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
                title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫"
            )
            
            st.plotly_chart(fig, use_container_width=True)