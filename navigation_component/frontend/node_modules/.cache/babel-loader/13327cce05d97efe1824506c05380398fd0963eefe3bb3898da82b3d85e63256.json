{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"nav-item\"\n};\nconst _hoisted_2 = [\"href\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"icon\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"nav-item\"\n};\nconst _hoisted_6 = {\n  class: \"nav-link-container\"\n};\nconst _hoisted_7 = {\n  class: \"nav-link\"\n};\nconst _hoisted_8 = {\n  class: \"nav-page-name\",\n  style: {\n    \"color\": \"rgba(255, 255, 255, 0.5)\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavigationItem = _resolveComponent(\"NavigationItem\", true);\n  return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass(['nav-link-container', $options.isActive ? 'active' : ''])\n  }, [_createElementVNode(\"a\", {\n    href: $props.item.url,\n    class: \"nav-link\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers($event => _ctx.$emit('navigate', $props.item.url), [\"prevent\"]))\n  }, [$props.item.icon ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($props.item.icon), 1)) : (_openBlock(), _createElementBlock(\"span\", {\n    key: 1,\n    class: _normalizeClass([\"nav-circle\", $options.getCircleClass])\n  }, null, 2)), _createElementVNode(\"span\", {\n    class: _normalizeClass(['nav-page-name', $options.isActive ? 'active' : '']),\n    innerHTML: $options.formatName($props.item.name)\n  }, null, 10, _hoisted_4)], 8, _hoisted_2), $options.hasChildren ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"nav-accordion\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.toggleExpanded && $options.toggleExpanded(...args), [\"stop\"]))\n  }, [_createElementVNode(\"span\", {\n    class: _normalizeClass(['nav-accordion-icon', $data.isExpanded ? 'close' : 'open'])\n  }, _toDisplayString($data.isExpanded ? '✕' : '+'), 3)])) : _createCommentVNode(\"\", true)], 2), $options.hasChildren ? (_openBlock(), _createElementBlock(\"ul\", {\n    key: 0,\n    class: _normalizeClass(['nav-list', $data.isExpanded ? 'expanded' : ''])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getChildren, child => {\n    return _openBlock(), _createBlock(_component_NavigationItem, {\n      key: child.id,\n      item: child,\n      \"current-page\": $props.currentPage,\n      \"current-params\": $props.currentParams,\n      onNavigate: _cache[2] || (_cache[2] = $event => _ctx.$emit('navigate', $event))\n    }, null, 8, [\"item\", \"current-page\", \"current-params\"]);\n  }), 128)), $props.item.has_more_cards ? (_openBlock(), _createElementBlock(\"li\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"nav-circle blue\"\n  }, null, -1)), _createElementVNode(\"span\", _hoisted_8, \" ...ещё \" + _toDisplayString($props.item.more_cards_count) + \" карточек \", 1)])])])) : _createCommentVNode(\"\", true)], 2)) : _createCommentVNode(\"\", true)]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}