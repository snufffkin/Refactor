# app.py ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ Streamlit —Å JSON-–Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∫—É—Ä—Å–∞:
–ü—Ä–æ–≥—Ä–∞–º–º–∞ -> –ú–æ–¥—É–ª—å -> –£—Ä–æ–∫ -> –ì–ó (–≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π) -> –ö–∞—Ä—Ç–æ—á–∫–∞
"""

import urllib.parse as ul
import streamlit as st
import os
import shutil

import core
import pages
from navigation_data import prepare_navigation_json

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
components_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), "components")
if not os.path.exists(components_dir):
    os.makedirs(components_dir)

# –ü—É—Ç—å –∫ HTML —Ñ–∞–π–ª—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
html_path = os.path.join(components_dir, "navigation.html")

# –ö–æ–ø–∏—Ä—É–µ–º HTML –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not os.path.exists(html_path):
    with open(html_path, 'w', encoding='utf-8') as f:
        f.write("""<!DOCTYPE html>
<html>
<head>
    <style>
        /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        body {
            font-family: "Source Sans Pro", sans-serif;
            font-size: 14px;
            color: rgba(255, 255, 255, 0.95);
            background-color: transparent;
        }
        .sidebar-menu {
            width: 100%;
            max-width: 300px;
        }

        /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ */
        ul.nav-list {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }
        ul.nav-list ul {
            padding-left: 20px;
            overflow: hidden;
            max-height: 0;
            transition: max-height 0.3s ease-out;
        }
        ul.nav-list ul.expanded {
            max-height: 1000px; /* –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è JS */
            transition: max-height 0.5s ease-in;
        }

        /* –°—Ç–∏–ª–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
        .nav-item {
            margin: 2px 0;
        }
        .nav-link-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 6px 10px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .nav-link-container:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .nav-link-container.active {
            background-color: rgba(77, 166, 255, 0.2);
        }
        .nav-link {
            display: flex;
            align-items: center;
            flex-grow: 1;
            text-decoration: none;
            color: rgba(255, 255, 255, 0.9);
        }
        .nav-circle {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            margin-right: 8px;
        }
        .nav-circle.blue {
            background-color: #4da6ff;
        }
        .nav-circle.green {
            background-color: #09ab3b;
        }
        .nav-circle.orange {
            background-color: #ff8f00;
        }
        .nav-circle.red {
            background-color: #ff4b4b;
        }
        .nav-page-name {
            flex-grow: 1;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .nav-page-name.active {
            font-weight: 600;
        }
        .nav-accordion {
            cursor: pointer;
            margin-left: 8px;
            width: 22px;
            height: 22px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
        }
        .nav-accordion:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .nav-accordion-icon {
            font-size: 16px;
            color: rgba(255, 255, 255, 0.6);
            transition: transform 0.3s;
        }
        .nav-accordion-icon.open {
            transform: rotate(0deg);
        }
        .nav-accordion-icon.close {
            transform: rotate(45deg);
        }

        /* –ò–∫–æ–Ω–∫–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
        .icon {
            margin-right: 8px;
            font-size: 16px;
        }
        
        /* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤ */
        .section-title {
            padding: 10px 10px 5px;
            font-weight: 600;
            color: rgba(255, 255, 255, 0.7);
            font-size: 16px;
        }
        .nav-separator {
            height: 1px;
            background-color: rgba(255, 255, 255, 0.1);
            margin: 10px 0;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ */
        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            color: rgba(255, 255, 255, 0.7);
        }
        .loading-spinner {
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid #4da6ff;
            border-radius: 50%;
            margin-right: 10px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –æ—à–∏–±–∫–∏ */
        .error-message {
            padding: 10px;
            background-color: rgba(255, 77, 77, 0.2);
            border-radius: 4px;
            margin: 10px;
            color: #ff4d4d;
        }
    </style>
</head>
<body>
    <div class="sidebar-menu" id="sidebar-menu">
        <div class="section-title">–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã</div>
        <ul class="nav-list" id="main-nav">
            <!-- –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã -->
            <div class="loading">
                <div class="loading-spinner"></div>
                <span>–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...</span>
            </div>
        </ul>
        
        <div class="nav-separator"></div>
        
        <div class="section-title">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫—É—Ä—Å–æ–≤</div>
        <ul class="nav-list" id="courses-nav">
            <!-- –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫—É—Ä—Å–æ–≤ -->
        </ul>
        
        <div class="nav-separator"></div>
        
        <div class="section-title">–§–∏–ª—å—Ç—Ä—ã</div>
        <ul class="nav-list" id="filters-nav">
            <li class="nav-item">
                <div class="nav-link-container" id="nav-filters">
                    <span class="nav-link">
                        <span class="icon">üîç</span>
                        <span class="nav-page-name">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã</span>
                    </span>
                    <div class="nav-accordion" onclick="toggleSubmenu('filters-submenu')">
                        <span class="nav-accordion-icon open">+</span>
                    </div>
                </div>
                <ul class="nav-list" id="filters-submenu">
                    <li class="nav-item filter-item">
                        <div class="filter-placeholder">
                            –§–∏–ª—å—Ç—Ä—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ Streamlit
                        </div>
                    </li>
                </ul>
            </li>
        </ul>
    </div>

    <script>
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        function getUrlParams() {
            const params = {};
            const searchParams = new URLSearchParams(window.parent.location.search);
            for (const [key, value] of searchParams.entries()) {
                params[key] = value;
            }
            return params;
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML-—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
        function generateNavigation(data) {
            const currentParams = getUrlParams();
            const currentPage = currentParams.page || 'overview';
            
            // –û—á–∏—â–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫
            document.getElementById('main-nav').innerHTML = '';
            document.getElementById('courses-nav').innerHTML = '';
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
            if (data.main_sections && data.main_sections.length > 0) {
                const mainNav = document.getElementById('main-nav');
                
                data.main_sections.forEach(section => {
                    const isActive = currentPage === section.id;
                    
                    const sectionLi = document.createElement('li');
                    sectionLi.className = 'nav-item';
                    
                    const sectionContainer = document.createElement('div');
                    sectionContainer.className = `nav-link-container${isActive ? ' active' : ''}`;
                    sectionContainer.id = `nav-${section.id}`;
                    
                    const sectionLink = document.createElement('a');
                    sectionLink.href = section.url;
                    sectionLink.className = 'nav-link';
                    sectionLink.innerHTML = `
                        <span class="icon">${section.icon}</span>
                        <span class="nav-page-name${isActive ? ' active' : ''}">${section.name}</span>
                    `;
                    
                    sectionContainer.appendChild(sectionLink);
                    sectionLi.appendChild(sectionContainer);
                    mainNav.appendChild(sectionLi);
                });
            }
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–æ–≤
            if (data.programs && data.programs.length > 0) {
                const coursesNav = document.getElementById('courses-nav');
                
                data.programs.forEach(program => {
                    const programLi = document.createElement('li');
                    programLi.className = 'nav-item';
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞
                    const isActiveProgram = program.id === currentParams.program;
                    
                    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
                    const programContainer = document.createElement('div');
                    programContainer.className = `nav-link-container${isActiveProgram ? ' active' : ''}`;
                    programContainer.id = `nav-program-${program.id.replace(/\s+/g, '-').toLowerCase()}`;
                    
                    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É
                    const programLink = document.createElement('a');
                    programLink.href = program.url;
                    programLink.className = 'nav-link';
                    programLink.innerHTML = `
                        <span class="icon">üìö</span>
                        <span class="nav-page-name${isActiveProgram ? ' active' : ''}">${program.name}</span>
                    `;
                    
                    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
                    const programAccordion = document.createElement('div');
                    programAccordion.className = 'nav-accordion';
                    programAccordion.onclick = function(e) {
                        e.preventDefault();
                        e.stopPropagation();
                        toggleSubmenu(`program-${program.id.replace(/\s+/g, '-').toLowerCase()}-submenu`);
                    };
                    
                    const programAccordionIcon = document.createElement('span');
                    programAccordionIcon.className = `nav-accordion-icon ${program.modules.length > 0 ? 'open' : ''}`;
                    programAccordionIcon.textContent = '+';
                    
                    programAccordion.appendChild(programAccordionIcon);
                    programContainer.appendChild(programLink);
                    programContainer.appendChild(programAccordion);
                    programLi.appendChild(programContainer);
                    
                    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–º–µ–Ω—é –¥–ª—è –º–æ–¥—É–ª–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
                    const modulesUl = document.createElement('ul');
                    modulesUl.className = 'nav-list';
                    modulesUl.id = `program-${program.id.replace(/\s+/g, '-').toLowerCase()}-submenu`;
                    
                    // –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∞–∫—Ç–∏–≤–Ω–∞, —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é
                    if (isActiveProgram) {
                        modulesUl.classList.add('expanded');
                        programAccordionIcon.classList.remove('open');
                        programAccordionIcon.classList.add('close');
                        programAccordionIcon.textContent = '‚úï';
                    }
                    
                    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –º–æ–¥—É–ª–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
                    if (program.modules && program.modules.length > 0) {
                        program.modules.forEach(module => {
                            const moduleLi = document.createElement('li');
                            moduleLi.className = 'nav-item';
                            
                            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –º–æ–¥—É–ª—å
                            const isActiveModule = isActiveProgram && module.id === currentParams.module;
                            
                            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –º–æ–¥—É–ª—è
                            const moduleContainer = document.createElement('div');
                            moduleContainer.className = `nav-link-container${isActiveModule ? ' active' : ''}`;
                            
                            // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –º–æ–¥—É–ª—å
                            const moduleLink = document.createElement('a');
                            moduleLink.href = module.url;
                            moduleLink.className = 'nav-link';
                            moduleLink.innerHTML = `
                                <span class="nav-circle blue"></span>
                                <span class="nav-page-name${isActiveModule ? ' active' : ''}">${module.name}</span>
                            `;
                            
                            // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ –¥–ª—è –º–æ–¥—É–ª—è
                            const moduleAccordion = document.createElement('div');
                            moduleAccordion.className = 'nav-accordion';
                            moduleAccordion.onclick = function(e) {
                                e.preventDefault();
                                e.stopPropagation();
                                toggleSubmenu(`module-${program.id.replace(/\s+/g, '-').toLowerCase()}-${module.id.replace(/\s+/g, '-').toLowerCase()}-submenu`);
                            };
                            
                            const moduleAccordionIcon = document.createElement('span');
                            moduleAccordionIcon.className = `nav-accordion-icon ${module.lessons && module.lessons.length > 0 ? 'open' : ''}`;
                            moduleAccordionIcon.textContent = '+';
                            
                            moduleAccordion.appendChild(moduleAccordionIcon);
                            moduleContainer.appendChild(moduleLink);
                            moduleContainer.appendChild(moduleAccordion);
                            moduleLi.appendChild(moduleContainer);
                            
                            // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–º–µ–Ω—é –¥–ª—è —É—Ä–æ–∫–æ–≤ –º–æ–¥—É–ª—è
                            const lessonsUl = document.createElement('ul');
                            lessonsUl.className = 'nav-list';
                            lessonsUl.id = `module-${program.id.replace(/\s+/g, '-').toLowerCase()}-${module.id.replace(/\s+/g, '-').toLowerCase()}-submenu`;
                            
                            // –ï—Å–ª–∏ –º–æ–¥—É–ª—å –∞–∫—Ç–∏–≤–µ–Ω, —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é
                            if (isActiveModule) {lessonsUl.classList.add('expanded');
                                moduleAccordionIcon.classList.remove('open');
                                moduleAccordionIcon.classList.add('close');
                                moduleAccordionIcon.textContent = '‚úï';
                            }
                            
                            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —É—Ä–æ–∫–æ–≤ –º–æ–¥—É–ª—è
                            if (module.lessons && module.lessons.length > 0) {
                                module.lessons.forEach(lesson => {
                                    const lessonLi = document.createElement('li');
                                    lessonLi.className = 'nav-item';
                                    
                                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —É—Ä–æ–∫
                                    const isActiveLesson = isActiveModule && lesson.id === currentParams.lesson;
                                    
                                    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —É—Ä–æ–∫–∞
                                    const lessonContainer = document.createElement('div');
                                    lessonContainer.className = `nav-link-container${isActiveLesson ? ' active' : ''}`;
                                    
                                    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —É—Ä–æ–∫
                                    const lessonLink = document.createElement('a');
                                    lessonLink.href = lesson.url;
                                    lessonLink.className = 'nav-link';
                                    lessonLink.innerHTML = `
                                        <span class="nav-circle blue"></span>
                                        <span class="nav-page-name${isActiveLesson ? ' active' : ''}">${lesson.name}</span>
                                    `;
                                    
                                    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ –¥–ª—è —É—Ä–æ–∫–∞
                                    const lessonAccordion = document.createElement('div');
                                    lessonAccordion.className = 'nav-accordion';
                                    lessonAccordion.onclick = function(e) {
                                        e.preventDefault();
                                        e.stopPropagation();
                                        toggleSubmenu(`lesson-${program.id.replace(/\s+/g, '-').toLowerCase()}-${module.id.replace(/\s+/g, '-').toLowerCase()}-${lesson.id.replace(/\s+/g, '-').toLowerCase()}-submenu`);
                                    };
                                    
                                    const lessonAccordionIcon = document.createElement('span');
                                    lessonAccordionIcon.className = `nav-accordion-icon ${lesson.groups && lesson.groups.length > 0 ? 'open' : ''}`;
                                    lessonAccordionIcon.textContent = '+';
                                    
                                    lessonAccordion.appendChild(lessonAccordionIcon);
                                    lessonContainer.appendChild(lessonLink);
                                    lessonContainer.appendChild(lessonAccordion);
                                    lessonLi.appendChild(lessonContainer);
                                    
                                    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–º–µ–Ω—é –¥–ª—è –≥—Ä—É–ø–ø –∑–∞–¥–∞–Ω–∏–π —É—Ä–æ–∫–∞
                                    const groupsUl = document.createElement('ul');
                                    groupsUl.className = 'nav-list';
                                    groupsUl.id = `lesson-${program.id.replace(/\s+/g, '-').toLowerCase()}-${module.id.replace(/\s+/g, '-').toLowerCase()}-${lesson.id.replace(/\s+/g, '-').toLowerCase()}-submenu`;
                                    
                                    // –ï—Å–ª–∏ —É—Ä–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω, —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é
                                    if (isActiveLesson) {
                                        groupsUl.classList.add('expanded');
                                        lessonAccordionIcon.classList.remove('open');
                                        lessonAccordionIcon.classList.add('close');
                                        lessonAccordionIcon.textContent = '‚úï';
                                    }
                                    
                                    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≥—Ä—É–ø–ø –∑–∞–¥–∞–Ω–∏–π —É—Ä–æ–∫–∞
                                    if (lesson.groups && lesson.groups.length > 0) {
                                        lesson.groups.forEach(group => {
                                            const groupLi = document.createElement('li');
                                            groupLi.className = 'nav-item';
                                            
                                            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –≥—Ä—É–ø–ø–∞ –∑–∞–¥–∞–Ω–∏–π
                                            const isActiveGroup = isActiveLesson && group.id === currentParams.gz;
                                            
                                            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π
                                            const groupContainer = document.createElement('div');
                                            groupContainer.className = `nav-link-container${isActiveGroup ? ' active' : ''}`;
                                            
                                            // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –∑–∞–¥–∞–Ω–∏–π
                                            const groupLink = document.createElement('a');
                                            groupLink.href = group.url;
                                            groupLink.className = 'nav-link';
                                            groupLink.innerHTML = `
                                                <span class="nav-circle blue"></span>
                                                <span class="nav-page-name${isActiveGroup ? ' active' : ''}">${group.name}</span>
                                            `;
                                            
                                            // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π
                                            const groupAccordion = document.createElement('div');
                                            groupAccordion.className = 'nav-accordion';
                                            groupAccordion.onclick = function(e) {
                                                e.preventDefault();
                                                e.stopPropagation();
                                                toggleSubmenu(`group-${program.id.replace(/\s+/g, '-').toLowerCase()}-${module.id.replace(/\s+/g, '-').toLowerCase()}-${lesson.id.replace(/\s+/g, '-').toLowerCase()}-${group.id.replace(/\s+/g, '-').toLowerCase()}-submenu`);
                                            };
                                            
                                            const groupAccordionIcon = document.createElement('span');
                                            groupAccordionIcon.className = `nav-accordion-icon ${group.cards && group.cards.length > 0 ? 'open' : ''}`;
                                            groupAccordionIcon.textContent = '+';
                                            
                                            groupAccordion.appendChild(groupAccordionIcon);
                                            groupContainer.appendChild(groupLink);
                                            groupContainer.appendChild(groupAccordion);
                                            groupLi.appendChild(groupContainer);
                                            
                                            // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–º–µ–Ω—é –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π
                                            const cardsUl = document.createElement('ul');
                                            cardsUl.className = 'nav-list';
                                            cardsUl.id = `group-${program.id.replace(/\s+/g, '-').toLowerCase()}-${module.id.replace(/\s+/g, '-').toLowerCase()}-${lesson.id.replace(/\s+/g, '-').toLowerCase()}-${group.id.replace(/\s+/g, '-').toLowerCase()}-submenu`;
                                            
                                            // –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –∑–∞–¥–∞–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–∞, —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é
                                            if (isActiveGroup) {
                                                cardsUl.classList.add('expanded');
                                                groupAccordionIcon.classList.remove('open');
                                                groupAccordionIcon.classList.add('close');
                                                groupAccordionIcon.textContent = '‚úï';
                                            }
                                            
                                            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π
                                            if (group.cards && group.cards.length > 0) {
                                                group.cards.forEach(card => {
                                                    const cardLi = document.createElement('li');
                                                    cardLi.className = 'nav-item';
                                                    
                                                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞
                                                    const isActiveCard = isActiveGroup && card.id === currentParams.card_id;
                                                    
                                                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞
                                                    let circleClass = 'blue';
                                                    if (card.risk > 0.75) {
                                                        circleClass = 'red';
                                                    } else if (card.risk > 0.5) {
                                                        circleClass = 'orange';
                                                    } else if (card.risk > 0.25) {
                                                        circleClass = 'green';
                                                    }
                                                    
                                                    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
                                                    const cardContainer = document.createElement('div');
                                                    cardContainer.className = `nav-link-container${isActiveCard ? ' active' : ''}`;
                                                    
                                                    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
                                                    const cardLink = document.createElement('a');
                                                    cardLink.href = card.url;
                                                    cardLink.className = 'nav-link';
                                                    cardLink.innerHTML = `
                                                        <span class="nav-circle ${circleClass}"></span>
                                                        <span class="nav-page-name${isActiveCard ? ' active' : ''}">${card.name}</span>
                                                    `;
                                                    
                                                    cardContainer.appendChild(cardLink);
                                                    cardLi.appendChild(cardContainer);
                                                    cardsUl.appendChild(cardLi);
                                                });
                                                
                                                // –ï—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ –∫–∞—Ä—Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è
                                                if (group.has_more_cards) {
                                                    const moreLi = document.createElement('li');
                                                    moreLi.className = 'nav-item';
                                                    
                                                    const moreContainer = document.createElement('div');
                                                    moreContainer.className = 'nav-link-container';
                                                    moreContainer.innerHTML = `
                                                        <span class="nav-link">
                                                            <span class="nav-circle blue"></span>
                                                            <span class="nav-page-name" style="color: rgba(255, 255, 255, 0.5);">...–µ—â—ë ${group.more_cards_count} –∫–∞—Ä—Ç–æ—á–µ–∫</span>
                                                        </span>
                                                    `;
                                                    
                                                    moreLi.appendChild(moreContainer);
                                                    cardsUl.appendChild(moreLi);
                                                }
                                            }
                                            
                                            groupLi.appendChild(cardsUl);
                                            groupsUl.appendChild(groupLi);
                                        });
                                    }
                                    
                                    lessonLi.appendChild(groupsUl);
                                    lessonsUl.appendChild(lessonLi);
                                });
                            }
                            
                            moduleLi.appendChild(lessonsUl);
                            modulesUl.appendChild(moduleLi);
                        });
                    }
                    
                    programLi.appendChild(modulesUl);
                    coursesNav.appendChild(programLi);
                });
            } else {
                // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö
                const noDataEl = document.createElement('div');
                noDataEl.className = 'loading';
                noDataEl.innerHTML = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫—É—Ä—Å–∞—Ö';
                document.getElementById('courses-nav').appendChild(noDataEl);
            }
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è/—Å–∫—Ä—ã—Ç–∏—è –ø–æ–¥–º–µ–Ω—é
        function toggleSubmenu(submenuId) {
            const submenu = document.getElementById(submenuId);
            if (!submenu) return;
            
            const isExpanded = submenu.classList.contains('expanded');
            const accordionIcon = submenu.previousElementSibling.querySelector('.nav-accordion-icon');
            
            if (isExpanded) {
                submenu.classList.remove('expanded');
                if (accordionIcon) {
                    accordionIcon.classList.remove('close');
                    accordionIcon.classList.add('open');
                    accordionIcon.textContent = '+';
                }
            } else {
                submenu.classList.add('expanded');
                if (accordionIcon) {
                    accordionIcon.classList.remove('open');
                    accordionIcon.classList.add('close');
                    accordionIcon.textContent = '‚úï';
                }
            }
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ JSON-—Ñ–∞–π–ª–∞
        async function loadNavigationData() {
            try {
                const response = await fetch('../navigation_data.json');
                if (!response.ok) {
                    throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${response.status}`);
                }
                const data = await response.json();
                generateNavigation(data);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                const errorMessage = document.createElement('div');
                errorMessage.className = 'error-message';
                errorMessage.textContent = `–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é: ${error.message}`;
                
                document.getElementById('main-nav').innerHTML = '';
                document.getElementById('main-nav').appendChild(errorMessage);
            }
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', loadNavigationData);
    </script>
</body>
</html>""")

# –ü—É—Ç—å –∫ JSON —Ñ–∞–π–ª—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
json_path = os.path.join(components_dir, "navigation_data.json")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    "Course Quality Dashboard", 
    layout="wide",
    page_icon="üìä",
    initial_sidebar_state="expanded"
)

# –ü—Ä–∏–º–µ–Ω—è–µ–º CSS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∏ —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
st.markdown("""
<style>
    /* –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü */
    [data-testid="collapsedControl"] {
        display: none;
    }
    
    /* –°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ */
    [data-testid="stSidebarNav"] {
        display: none !important;
    }
    
    /* –°–∫—Ä—ã—Ç—å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ */
    [data-testid="stSidebarNavSeparator"] {
        display: none !important;
    }
    
    /* –ü—Ä–∏–∂–∞—Ç—å —Å–∞–π–¥–±–∞—Ä –∫ –∫—Ä–∞—é */
    section[data-testid="stSidebar"] {
        width: 100% !important;
        margin-left: 0 !important;
        padding-left: 0 !important;
    }
    
    /* –£–±—Ä–∞—Ç—å –æ—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ */
    .css-1d391kg, .css-1v3fvcr {
        padding-left: 0 !important;
    }
    
    /* –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –º–µ—Ç—Ä–∏–∫ */
    div[data-testid="stMetric"] {
        background-color: rgba(28, 131, 225, 0.1);
        padding: 0.75rem;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
    }
    
    div[data-testid="stMetric"] label {
        color: #4da6ff !important; 
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricValue"] {
        color: #ffffff !important;  /* –±–µ–ª—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è */
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricDelta"] {
        color: inherit !important;  /* –Ω–∞—Å–ª–µ–¥—É–µ–º —Ü–≤–µ—Ç –¥–ª—è –¥–µ–ª—å—Ç—ã */
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ */
    .nav-link {
        text-decoration: none;
        color: #4da6ff;
        font-weight: 600;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        margin-right: 0.5rem;
    }
    
    .nav-link:hover {
        background-color: rgba(77, 166, 255, 0.1);
    }
    
    .nav-link.active {
        background-color: rgba(77, 166, 255, 0.2);
    }
    
    /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è iframe */
    iframe {
        border: none !important;
        padding: 0 !important;
    }
    
    /* –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ Streamlit –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    div[data-testid="stSidebar"] div[data-testid="stMarkdown"] h3 {
        color: rgba(255, 255, 255, 0.7);
        font-size: 16px;
        font-weight: 600;
        margin-top: 20px;
        margin-bottom: 10px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ */
    div[data-testid="stSidebar"]::-webkit-scrollbar {
        width: 5px;
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 5px;
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.3);
    }
</style>
""", unsafe_allow_html=True)

# –ö—ç—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ, –Ω–æ –Ω–µ engine
@st.cache_data(ttl=3600)  # –£–º–µ–Ω—å—à–∞–µ–º –≤—Ä–µ–º—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ 1 —á–∞—Å–∞
def load_cached_data(_engine):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –∫—ç—à–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    data = core.load_data(_engine)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—á–µ—Ç —É—Ä–æ–≤–Ω—è "–ø–æ–¥–ª–æ—Å—Ç–∏" –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    data["trickiness_level"] = data.apply(core.get_trickiness_level, axis=1)
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—É–ª—ã —Ä–∏—Å–∫–∞ —Å —É—á–µ—Ç–æ–º –ø–æ–¥–ª–æ—Å—Ç–∏ –≤–º–µ—Å—Ç–æ first_try
    data["risk"] = data.apply(core.risk_score, axis=1)
    
    return data

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
def create_page_link(page, **params):
    """–°–æ–∑–¥–∞–µ—Ç URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏"""
    base_url = "?"
    all_params = {"page": page}
    all_params.update(params)
    
    param_strings = []
    for key, value in all_params.items():
        if value is not None:
            param_strings.append(f"{key}={ul.quote_plus(str(value))}")
    
    return base_url + "&".join(param_strings)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
def set_filters_from_params(params):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL"""
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
    for filter_name in core.FILTERS:
        # –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä –µ—Å—Ç—å –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ
        if filter_name in params:
            st.session_state[f"filter_{filter_name}"] = params[filter_name]

# –°–æ–∑–¥–∞–µ–º engine –≤–Ω–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
engine = core.get_engine()
data = load_cached_data(engine)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª JSON —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π, –µ—Å–ª–∏ –Ω–µ—Ç - —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
if not os.path.exists(json_path) or st.session_state.get("update_navigation", False):
    prepare_navigation_json(data, json_path)
    st.session_state["update_navigation"] = False

# ---------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ---------------------- #
params = st.query_params

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
current_page = params.get("page", "overview")
# –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–∞—Ç—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –Ω–∞—à–∏–º –∫–ª—é—á–∞–º —Å—Ç—Ä–∞–Ω–∏—Ü
if current_page == "overview":
    current_page = "–û–±–∑–æ—Ä"
elif current_page == "programs":
    current_page = "–ü—Ä–æ–≥—Ä–∞–º–º—ã"
elif current_page == "modules":
    current_page = "–ú–æ–¥—É–ª–∏"
elif current_page == "lessons":
    current_page = "–£—Ä–æ–∫–∏"
elif current_page == "gz":
    current_page = "–ì–ó"
elif current_page == "cards":
    current_page = "–ö–∞—Ä—Ç–æ—á–∫–∏"
elif current_page == "admin":
    current_page = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
set_filters_from_params(params)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ card_id –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ä—Ç–æ—á–∫–∏
if "card_id" in params and current_page == "–ö–∞—Ä—Ç–æ—á–∫–∏":
    card_id = params["card_id"]
    st.session_state["selected_card_id"] = card_id
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏
    card_data = data[data.card_id == float(card_id)]
    if not card_data.empty:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
        if "filter_program" not in st.session_state or not st.session_state["filter_program"]:
            st.session_state["filter_program"] = card_data["program"].iloc[0]
        if "filter_module" not in st.session_state or not st.session_state["filter_module"]:
            st.session_state["filter_module"] = card_data["module"].iloc[0]
        if "filter_lesson" not in st.session_state or not st.session_state["filter_lesson"]:
            st.session_state["filter_lesson"] = card_data["lesson"].iloc[0]
        if "filter_gz" not in st.session_state or not st.session_state["filter_gz"]:
            st.session_state["filter_gz"] = card_data["gz"].iloc[0]

# ---------------------- sidebar & navigation ------------------------------ #
# –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏—é —Å–∞–π–¥–±–∞—Ä–∞
pages.sidebar_filters(data, create_page_link)

# –°–ª–æ–≤–∞—Ä—å —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
PAGES = {
    "–û–±–∑–æ—Ä": pages.page_overview,
    "–ü—Ä–æ–≥—Ä–∞–º–º—ã": pages.page_programs,
    "–ú–æ–¥—É–ª–∏": pages.page_modules,
    "–£—Ä–æ–∫–∏": pages.page_lessons,
    "–ì–ó": lambda df: pages.page_gz(df, create_page_link),  # –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫
    "–ö–∞—Ä—Ç–æ—á–∫–∏": lambda df: pages.page_cards(df, engine),
    "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏": pages.page_admin,
}

# –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
st.session_state["page"] = current_page

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
PAGES[current_page](data)