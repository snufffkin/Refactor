# app.py ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ Streamlit —Å JSON-–Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∫—É—Ä—Å–∞:
–ü—Ä–æ–≥—Ä–∞–º–º–∞ -> –ú–æ–¥—É–ª—å -> –£—Ä–æ–∫ -> –ì–ó (–≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π) -> –ö–∞—Ä—Ç–æ—á–∫–∞
"""

import urllib.parse as ul
import streamlit as st
import os
import shutil
import pandas as pd
import auth

auth.init_auth()

import core
import pages
import pages.my_tasks
import pages.methodist_admin
import pages.refactor_planning
import navigation_utils

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    "Course Quality Dashboard", 
    layout="wide",
    page_icon="üìä",
    initial_sidebar_state="expanded"
)

# –ü—Ä–∏–º–µ–Ω—è–µ–º CSS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∏ —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
st.markdown("""
<style>
    /* –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü */
    [data-testid="collapsedControl"] {
        display: none;
    }
    
    /* –°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ */
    [data-testid="stSidebarNav"] {
        display: none !important;
    }
    
    /* –°–∫—Ä—ã—Ç—å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ */
    [data-testid="stSidebarNavSeparator"] {
        display: none !important;
    }
    
    /* –ü—Ä–∏–∂–∞—Ç—å —Å–∞–π–¥–±–∞—Ä –∫ –∫—Ä–∞—é */
    section[data-testid="stSidebar"] {
        width: auto !important;
        max-width: 320px !important;
        margin-left: 0 !important;
        padding-left: 0 !important;
    }
    
    /* –£–±—Ä–∞—Ç—å –æ—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ */
    .css-1d391kg, .css-1v3fvcr {
        padding-left: 0 !important;
    }
    
    /* –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –º–µ—Ç—Ä–∏–∫ */
    div[data-testid="stMetric"] {
        background-color: rgba(28, 131, 225, 0.1);
        padding: 0.75rem;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
    }
    
    div[data-testid="stMetric"] label {
        color: #4da6ff !important; 
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricValue"] {
        color: #ffffff !important;  /* –±–µ–ª—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è */
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricDelta"] {
        color: inherit !important;  /* –Ω–∞—Å–ª–µ–¥—É–µ–º —Ü–≤–µ—Ç –¥–ª—è –¥–µ–ª—å—Ç—ã */
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ */
    .nav-link {
        text-decoration: none;
        color: #4da6ff;
        font-weight: 600;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        margin-right: 0.5rem;
    }
    
    .nav-link:hover {
        background-color: rgba(77, 166, 255, 0.1);
    }
    
    .nav-link.active {
        background-color: rgba(77, 166, 255, 0.2);
    }
    
    /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è iframe */
    iframe {
        border: none !important;
        padding: 0 !important;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ */
    div[data-testid="stSidebar"]::-webkit-scrollbar {
        width: 5px;
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 5px;
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.3);
    }
    
    /* –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ Streamlit –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    div[data-testid="stSidebar"] div[data-testid="stMarkdown"] h3 {
        color: rgba(255, 255, 255, 0.7);
        font-size: 16px;
        font-weight: 600;
        margin-top: 20px;
        margin-bottom: 10px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
    div[data-testid="stButton"] button {
        border-radius: 4px;
        font-weight: bold;
        padding: 0.5rem 0.5rem;
        min-width: 40px;
        background-color: rgba(28, 131, 225, 0.1);
        border: 1px solid rgba(77, 166, 255, 0.3);
        transition: all 0.2s ease;
        font-size: 16px;
    }
    
    div[data-testid="stButton"] button:hover {
        background-color: rgba(28, 131, 225, 0.3);
        border: 1px solid rgba(77, 166, 255, 0.6);
    }
    
    div[data-testid="stButton"] button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background-color: rgba(28, 131, 225, 0.05);
        border: 1px solid rgba(77, 166, 255, 0.1);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–∞–Ω–µ–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
    .nav-container {
        margin-bottom: 10px;
        padding: 5px 0;
        border-bottom: 1px solid rgba(77, 166, 255, 0.1);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    .sidebar-nav-container {
        margin-bottom: 15px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è SVG –∏–∫–æ–Ω–æ–∫ –≤ –∫–Ω–æ–ø–∫–∞—Ö */
    div[data-testid="stButton"] button img {
        display: inline-block;
        vertical-align: middle;
    }
    
    /* –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    .stButton > button {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 36px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã */
    .sidebar-nav-container div[data-testid="stMarkdown"] {
        margin-top: 8px;
        text-align: center;
    }
</style>
""", unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
def navigate_to(page, update_url=True, **params):
    """
    –ò–∑–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–µ–∑ –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    
    Args:
        page: –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
        update_url: –û–±–Ω–æ–≤–ª—è—Ç—å –ª–∏ URL –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        **params: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (—Ñ–∏–ª—å—Ç—Ä—ã, card_id –∏ —Ç.–¥.)
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏–∏
    if "nav_history" not in st.session_state:
        st.session_state.nav_history = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π
    current = st.session_state.get("current_page")
    if current and current != page and (not st.session_state.nav_history or st.session_state.nav_history[-1] != current):
        st.session_state.nav_history.append(current)
        # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø–µ—á–∞—Ç–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
        print(f"–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {st.session_state.nav_history}")
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é 10 –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    if len(st.session_state.nav_history) > 10:
        st.session_state.nav_history = st.session_state.nav_history[-10:]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ session_state
    st.session_state.current_page = page
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    for key, value in params.items():
        if key == "filter_program":
            st.session_state.filter_program = value
        elif key == "filter_module":
            st.session_state.filter_module = value
        elif key == "filter_lesson":
            st.session_state.filter_lesson = value
        elif key == "filter_gz":
            st.session_state.filter_gz = value
        elif key == "card_id":
            st.session_state.selected_card_id = value
        else:
            st.session_state[key] = value
    
    # –û–±–Ω–æ–≤–ª—è–µ–º URL, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    if update_url:
        url_params = {"page": page.lower()}
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –≤ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if "filter_program" in st.session_state and st.session_state.filter_program:
            url_params["program"] = st.session_state.filter_program
        if "filter_module" in st.session_state and st.session_state.filter_module:
            url_params["module"] = st.session_state.filter_module
        if "filter_lesson" in st.session_state and st.session_state.filter_lesson:
            url_params["lesson"] = st.session_state.filter_lesson
        if "filter_gz" in st.session_state and st.session_state.filter_gz:
            url_params["gz"] = st.session_state.filter_gz
        if "selected_card_id" in st.session_state and st.session_state.selected_card_id:
            url_params["card_id"] = st.session_state.selected_card_id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        st.query_params = url_params
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã navigation_utils
        navigation_utils.add_to_history(url_params)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
def go_back():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    if "nav_history" in st.session_state and st.session_state.nav_history:
        prev_page = st.session_state.nav_history.pop()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ prev_page —Å–ª–æ–≤–∞—Ä–µ–º –∏–ª–∏ —Å—Ç—Ä–æ–∫–æ–π
        if isinstance(prev_page, dict):
            # –ï—Å–ª–∏ —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
            page = prev_page.get("page", "overview")
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º page –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è session_state
            if page == "overview":
                st.session_state.current_page = "–û–±–∑–æ—Ä"
            elif page == "programs":
                st.session_state.current_page = "–ü—Ä–æ–≥—Ä–∞–º–º—ã"
            elif page == "modules":
                st.session_state.current_page = "–ú–æ–¥—É–ª–∏"
            elif page == "lessons":
                st.session_state.current_page = "–£—Ä–æ–∫–∏"
            elif page == "gz":
                st.session_state.current_page = "–ì–ó"
            elif page == "cards":
                st.session_state.current_page = "–ö–∞—Ä—Ç–æ—á–∫–∏"
            elif page == "admin":
                st.session_state.current_page = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
            else:
                st.session_state.current_page = "–û–±–∑–æ—Ä"
            
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
            for filter_name in core.FILTERS:
                if filter_name in prev_page:
                    st.session_state[f"filter_{filter_name}"] = prev_page[filter_name]
                else:
                    # –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
                    if f"filter_{filter_name}" in st.session_state:
                        del st.session_state[f"filter_{filter_name}"]
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å–æ–±—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (card_id)
            if "card_id" in prev_page:
                st.session_state["selected_card_id"] = prev_page["card_id"]
            elif "selected_card_id" in st.session_state:
                del st.session_state["selected_card_id"]
                
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞–ø—Ä—è–º—É—é
            st.query_params = prev_page
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
            navigation_utils.add_to_history(prev_page)
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
            # –°–Ω–∞—á–∞–ª–∞ –º–µ–Ω—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            st.session_state.current_page = prev_page
            # –ó–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª—è–µ–º URL
            page_lower = prev_page.lower()
            if page_lower == "–æ–±–∑–æ—Ä":
                page_lower = "overview"
            elif page_lower == "–ø—Ä–æ–≥—Ä–∞–º–º—ã":
                page_lower = "programs"
            elif page_lower == "–º–æ–¥—É–ª–∏":
                page_lower = "modules"
            elif page_lower == "—É—Ä–æ–∫–∏":
                page_lower = "lessons"
            elif page_lower == "–≥–∑":
                page_lower = "gz"
            elif page_lower == "–∫–∞—Ä—Ç–æ—á–∫–∏":
                page_lower = "cards"
            elif page_lower == "‚öôÔ∏è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏":
                page_lower = "admin"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º URL —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
            current_params = dict(st.query_params)
            current_params["page"] = page_lower
            st.query_params = current_params
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
            navigation_utils.add_to_history(current_params)
        
        return True
    return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
def set_filters_from_params(params):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL"""
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
    for filter_name in core.FILTERS:
        # –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä –µ—Å—Ç—å –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ
        if filter_name in params:
            st.session_state[f"filter_{filter_name}"] = params[filter_name]

# –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data(ttl=3600)
def load_app_data(_engine, current_page):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    
    Args:
        _engine: SQLAlchemy engine –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
        current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞–±–æ—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    """
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    level_mapping = {
        "–û–±–∑–æ—Ä": "overview",
        "–ü—Ä–æ–≥—Ä–∞–º–º—ã": "program",
        "–ú–æ–¥—É–ª–∏": "module",
        "–£—Ä–æ–∫–∏": "lesson",
        "–ì–ó": "gz",
        "–ö–∞—Ä—Ç–æ—á–∫–∏": "card"
    }
    level = level_mapping.get(current_page, "overview")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ —Å–µ—Å—Å–∏–∏
    program = st.session_state.get("filter_program")
    module = st.session_state.get("filter_module")
    lesson = st.session_state.get("filter_lesson")
    gz = st.session_state.get("filter_gz")
    card_id = st.session_state.get("selected_card_id")
    
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ load_all_data_for_level
    params = {
        "level": level,
        "program": program,
        "module": module,
        "lesson": lesson,
        "gz": gz,
        "_engine": _engine
    }
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ä—Ç–æ—á–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º card_id –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç,
    # –Ω–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –≤ load_all_data_for_level
    result = core.load_all_data_for_level(**params)
    
    # –î–æ–±–∞–≤–ª—è–µ–º card_id –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if level == "card" and card_id:
        result["card_id"] = card_id
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
        card_data = core.load_card_data(program=program, module=module, lesson=lesson, gz=gz, _engine=_engine)
        if not card_data.empty:
            result["card_data"] = card_data[card_data["card_id"] == int(card_id)]
    
    # –í—Å–µ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    # –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã sidebar_filters
    navigation_raw_data = core.load_raw_data(_engine)
    navigation_data = core.process_data(navigation_raw_data)
    result["navigation_data"] = navigation_data
    
    # –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç
    if current_page in ["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ú–æ–∏ –∑–∞–¥–∞—á–∏", "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤", "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞"]:
        # –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        result["full_data"] = navigation_data
    
    return result

# –ò–∑–º–µ–Ω–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
def create_internal_link(target_page, label, **params):
    """
    –°–æ–∑–¥–∞–µ—Ç HTML-–∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    
    Args:
        target_page: –¶–µ–ª–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        label: –¢–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
        **params: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ navigate_to
    """
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    key_str = f"{target_page}_{label}"
    for k, v in params.items():
        key_str += f"_{k}_{v}"
    
    key = str(hash(key_str))
    
    if st.button(label, key=key):
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        current = st.session_state.get("current_page")
        if current and current != target_page:
            if "nav_history" not in st.session_state:
                st.session_state.nav_history = []
            st.session_state.nav_history.append(current)
            # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø–µ—á–∞—Ç–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
            print(f"–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–∏–∑ –∫–Ω–æ–ø–∫–∏): {st.session_state.nav_history}")
            
        # –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        st.session_state.current_page = target_page
        
        # –û–±–Ω–æ–≤–ª—è–µ–º URL –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é)
        url_params = {"page": target_page.lower()}
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –≤ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ–º session_state
        for key, value in params.items():
            if key == "filter_program":
                st.session_state.filter_program = value
                url_params["program"] = value
            elif key == "filter_module":
                st.session_state.filter_module = value
                url_params["module"] = value
            elif key == "filter_lesson":
                st.session_state.filter_lesson = value
                url_params["lesson"] = value
            elif key == "filter_gz":
                st.session_state.filter_gz = value
                url_params["gz"] = value
            elif key == "card_id":
                st.session_state.selected_card_id = value
                url_params["card_id"] = value
            else:
                st.session_state[key] = value
        
        st.query_params = url_params
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã navigation_utils
        navigation_utils.add_to_history(url_params)
        st.rerun()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è navigation_utils –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
def init_internal_navigation():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å–∏—Å—Ç–µ–º—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_utils.create_page_link = create_internal_link
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if "nav_history" not in st.session_state:
        st.session_state.nav_history = []
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –≤ navigation_utils
    navigation_utils.init_navigation_history()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL –≤ –∏—Å—Ç–æ—Ä–∏—é navigation_utils
    if st.query_params:
        navigation_utils.add_to_history(st.query_params)
    else:
        # –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º overview –∫–∞–∫ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        navigation_utils.add_to_history({"page": "overview"})

# –°–æ–∑–¥–∞–µ–º engine –≤–Ω–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
engine = core.get_engine()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if not auth.check_authentication():
    auth.login_page(engine)
    st.stop()

# ---------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ---------------------- #
params = st.query_params

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
init_internal_navigation()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ URL –∏–ª–∏ –∏–∑ session_state
page_from_url = params.get("page", None)
if page_from_url:
    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–∞—Ç—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –Ω–∞—à–∏–º –∫–ª—é—á–∞–º —Å—Ç—Ä–∞–Ω–∏—Ü
    if page_from_url == "overview":
        current_page = "–û–±–∑–æ—Ä"
        # –î–æ–±–∞–≤–ª—è–µ–º overview –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞
        if navigation_utils.get_history_size() == 0:
            navigation_utils.add_to_history({"page": "overview"})
            print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –î–æ–±–∞–≤–∏–ª–∏ overview –≤ –ø—É—Å—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é")
    elif page_from_url == "programs":
        current_page = "–ü—Ä–æ–≥—Ä–∞–º–º—ã"
    elif page_from_url == "modules":
        current_page = "–ú–æ–¥—É–ª–∏"
    elif page_from_url == "lessons":
        current_page = "–£—Ä–æ–∫–∏"
    elif page_from_url == "gz":
        current_page = "–ì–ó"
    elif page_from_url == "cards":
        current_page = "–ö–∞—Ä—Ç–æ—á–∫–∏"
    elif page_from_url == "admin":
        current_page = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    elif page_from_url == "my_tasks":
        current_page = "–ú–æ–∏ –∑–∞–¥–∞—á–∏"
    elif page_from_url == "methodist_admin":
        current_page = "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤"
    elif page_from_url == "refactor_planning":
        current_page = "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞"
    else:
        current_page = "–û–±–∑–æ—Ä"
        # –î–æ–±–∞–≤–ª—è–µ–º overview –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞
        if navigation_utils.get_history_size() == 0:
            navigation_utils.add_to_history({"page": "overview"})
            print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –î–æ–±–∞–≤–∏–ª–∏ overview –≤ –ø—É—Å—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é (—á–µ—Ä–µ–∑ else)")
        
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session_state –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    st.session_state.current_page = current_page
else:
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ session_state –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–û–±–∑–æ—Ä"
    current_page = st.session_state.get("current_page", "–û–±–∑–æ—Ä")
    
    # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –∏ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –¥–æ–±–∞–≤–ª—è–µ–º overview –≤ –∏—Å—Ç–æ—Ä–∏—é
    if navigation_utils.get_history_size() == 0:
        navigation_utils.add_to_history({"page": "overview"})
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –î–æ–±–∞–≤–∏–ª–∏ overview –≤ –ø—É—Å—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
set_filters_from_params(params)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ card_id –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ä—Ç–æ—á–∫–∏
if "card_id" in params and current_page == "–ö–∞—Ä—Ç–æ—á–∫–∏":
    card_id = params["card_id"]
    st.session_state["selected_card_id"] = card_id
    
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
data_key = f"data_cache_{current_page}"
data_dict = st.session_state.get(data_key)

# –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–ª–∏ –æ–Ω–∏ —É—Å—Ç–∞—Ä–µ–ª–∏, –∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–Ω–æ–≤–æ
if data_dict is None:
    data_dict = load_app_data(engine, current_page)
    # –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ session_state
    st.session_state[data_key] = data_dict

# –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ä—Ç–æ—á–∫–∏, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏
if "card_id" in params and current_page == "–ö–∞—Ä—Ç–æ—á–∫–∏":
    card_id = params["card_id"]
    if "card_data" in data_dict and not data_dict["card_data"].empty:
        card_data = data_dict["card_data"]
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
        if "filter_program" not in st.session_state or not st.session_state["filter_program"]:
            st.session_state["filter_program"] = card_data["program"].iloc[0]
        if "filter_module" not in st.session_state or not st.session_state["filter_module"]:
            st.session_state["filter_module"] = card_data["module"].iloc[0]
        if "filter_lesson" not in st.session_state or not st.session_state["filter_lesson"]:
            st.session_state["filter_lesson"] = card_data["lesson"].iloc[0]
        if "filter_gz" not in st.session_state or not st.session_state["filter_gz"]:
            st.session_state["filter_gz"] = card_data["gz"].iloc[0]

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ navigation_utils
def use_navigation_utils_history():
    """–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –º–æ–¥—É–ª—è navigation_utils –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    history_size = navigation_utils.get_history_size()
    print(f"–†–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏ navigation_utils: {history_size}")
    if history_size > 0:
        # –í—ã–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏—Å—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞
        history = st.session_state.get("nav_history", [])
        position = st.session_state.get("nav_history_position", -1)
        print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏—Å—Ç–æ—Ä–∏–∏: {history}")
        print(f"–¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è: {position}")
    
    if navigation_utils.navigate_back():
        # –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞
        return True
    return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–ø–µ—Ä–µ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º navigation_utils
def use_navigation_utils_forward():
    """–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –º–æ–¥—É–ª—è navigation_utils –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–ø–µ—Ä–µ–¥"""
    if navigation_utils.navigate_forward():
        # –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞
        return True
    return False

# ---------------------- sidebar & navigation ------------------------------ #
# –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–∑–∞–¥/–≤–ø–µ—Ä–µ–¥
col1, col2, col3, col4 = st.sidebar.columns([1, 1, 3, 1])

with col1:
    if st.button("‚¨ÖÔ∏è", help="–ù–∞–∑–∞–¥", key="btn_back"):
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        print(f"–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–ø–µ—Ä–µ–¥ –Ω–∞–∑–∞–¥): {st.session_state.nav_history}")
        print(f"–ò—Å—Ç–æ—Ä–∏—è navigation_utils (—Ä–∞–∑–º–µ—Ä: {navigation_utils.get_history_size()})")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑ navigation_utils
        if use_navigation_utils_history():
            print("–í—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞–∑–∞–¥ —á–µ—Ä–µ–∑ navigation_utils")
            st.rerun()
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∏—Å—Ç–æ—Ä–∏—é
        elif go_back():
            print("–í—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞–∑–∞–¥ —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∏—Å—Ç–æ—Ä–∏—é")
            st.rerun()
        else:
            print("–û—à–∏–±–∫–∞: –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø—É—Å—Ç–∞")
            st.warning("–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø—É—Å—Ç–∞", icon="‚ö†Ô∏è")

with col2:
    if st.button("‚û°Ô∏è", help="–í–ø–µ—Ä–µ–¥", key="btn_forward"):
        # –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤–ø–µ—Ä–µ–¥
        if use_navigation_utils_forward():
            st.rerun()
        else:
            st.warning("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤–ø–µ—Ä–µ–¥", icon="‚ö†Ô∏è")

with col3:
    st.markdown(f"**{current_page}**", unsafe_allow_html=True)

with col4:
    if st.button("üîÑ", help="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", key="btn_refresh"):
        # –û—á–∏—â–∞–µ–º –∫—ç—à –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if f"data_cache_{current_page}" in st.session_state:
            del st.session_state[f"data_cache_{current_page}"]
        st.rerun()

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Å–∞–π–¥–±–∞—Ä
st.sidebar.markdown("### –ù–∞–≤–∏–≥–∞—Ü–∏—è")
nav_cols = st.sidebar.columns(2)

with nav_cols[0]:
    if st.button("üìä –û–±–∑–æ—Ä", key="nav_overview"):
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        current = st.session_state.get("current_page")
        if current and current != "–û–±–∑–æ—Ä":
            if "nav_history" not in st.session_state:
                st.session_state.nav_history = []
            st.session_state.nav_history.append(current)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        st.session_state.current_page = "–û–±–∑–æ—Ä"
        st.query_params = {"page": "overview"}
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
        navigation_utils.add_to_history({"page": "overview"})
        st.rerun()
        
    if st.button("üìö –ú–æ–¥—É–ª–∏", key="nav_modules"):
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        current = st.session_state.get("current_page")
        if current and current != "–ú–æ–¥—É–ª–∏":
            if "nav_history" not in st.session_state:
                st.session_state.nav_history = []
            st.session_state.nav_history.append(current)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        st.session_state.current_page = "–ú–æ–¥—É–ª–∏"
        st.query_params = {"page": "modules"}
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
        navigation_utils.add_to_history({"page": "modules"})
        st.rerun()
        
    if st.button("üß© –ì–ó", key="nav_gz"):
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        current = st.session_state.get("current_page")
        if current and current != "–ì–ó":
            if "nav_history" not in st.session_state:
                st.session_state.nav_history = []
            st.session_state.nav_history.append(current)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        st.session_state.current_page = "–ì–ó"
        st.query_params = {"page": "gz"}
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
        navigation_utils.add_to_history({"page": "gz"})
        st.rerun()

with nav_cols[1]:
    if st.button("üè´ –ü—Ä–æ–≥—Ä–∞–º–º—ã", key="nav_programs"):
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        current = st.session_state.get("current_page")
        if current and current != "–ü—Ä–æ–≥—Ä–∞–º–º—ã":
            if "nav_history" not in st.session_state:
                st.session_state.nav_history = []
            st.session_state.nav_history.append(current)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        st.session_state.current_page = "–ü—Ä–æ–≥—Ä–∞–º–º—ã"
        st.query_params = {"page": "programs"}
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
        navigation_utils.add_to_history({"page": "programs"})
        st.rerun()
        
    if st.button("üìù –£—Ä–æ–∫–∏", key="nav_lessons"):
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        current = st.session_state.get("current_page")
        if current and current != "–£—Ä–æ–∫–∏":
            if "nav_history" not in st.session_state:
                st.session_state.nav_history = []
            st.session_state.nav_history.append(current)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        st.session_state.current_page = "–£—Ä–æ–∫–∏"
        st.query_params = {"page": "lessons"}
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
        navigation_utils.add_to_history({"page": "lessons"})
        st.rerun()
        
    if st.button("üÉè –ö–∞—Ä—Ç–æ—á–∫–∏", key="nav_cards"):
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        current = st.session_state.get("current_page")
        if current and current != "–ö–∞—Ä—Ç–æ—á–∫–∏":
            if "nav_history" not in st.session_state:
                st.session_state.nav_history = []
            st.session_state.nav_history.append(current)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        st.session_state.current_page = "–ö–∞—Ä—Ç–æ—á–∫–∏"
        st.query_params = {"page": "cards"}
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ navigation_utils
        navigation_utils.add_to_history({"page": "cards"})
        st.rerun()

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
filter_data = data_dict.get("full_data", None)
if filter_data is None:
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤, –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞
    filter_data = data_dict.get("navigation_data", pd.DataFrame())

# –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏—é —Å–∞–π–¥–±–∞—Ä–∞
pages.sidebar_filters(filter_data, create_internal_link)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
auth.show_user_menu()

# –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∑–∞–¥–∞—á–∞–º –∏ –∞–¥–º–∏–Ω–∫–µ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ (–±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–µ—Å—Å–∏–∏)
st.sidebar.markdown("---")
if st.sidebar.button("üìù –ú–æ–∏ –∑–∞–¥–∞—á–∏", key="sidebar_my_tasks"):
    navigate_to("–ú–æ–∏ –∑–∞–¥–∞—á–∏")
    st.rerun()
if st.sidebar.button("üë®‚Äçüè´ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤", key="sidebar_methodist_admin"):
    navigate_to("–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤")
    st.rerun()
# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
if st.session_state.role == "admin":
    if st.sidebar.button("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞", key="sidebar_refactor_planning"):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        st.session_state.current_page = "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞"
        st.query_params = {"page": "refactor_planning"}
        navigation_utils.add_to_history({"page": "refactor_planning"})
        st.rerun()

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü —Å –ø–µ—Ä–µ–¥–∞—á–µ–π —Å–ª–æ–≤–∞—Ä—è –¥–∞–Ω–Ω—ã—Ö
PAGES = {
    "–û–±–∑–æ—Ä": lambda data_dict: pages.page_overview(data_dict.get("navigation_data")),
    "–ü—Ä–æ–≥—Ä–∞–º–º—ã": lambda data_dict: pages.page_programs(data_dict.get("navigation_data")),
    "–ú–æ–¥—É–ª–∏": lambda data_dict: pages.page_modules(data_dict.get("navigation_data")),
    "–£—Ä–æ–∫–∏": lambda data_dict: pages.page_lessons(data_dict.get("navigation_data")),
    "–ì–ó": lambda data_dict: pages.page_gz(data_dict.get("navigation_data"), create_internal_link),
    "–ö–∞—Ä—Ç–æ—á–∫–∏": lambda data_dict: pages.page_cards(data_dict.get("navigation_data"), engine),
    "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏": lambda data_dict: pages.page_admin(data_dict.get("full_data", pd.DataFrame())),
    "–ú–æ–∏ –∑–∞–¥–∞—á–∏": lambda data_dict: pages.my_tasks.page_my_tasks(data_dict.get("full_data", pd.DataFrame()), engine),
    "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤": lambda data_dict: pages.methodist_admin.page_methodist_admin(data_dict.get("full_data", pd.DataFrame()), engine),
    "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞": lambda data_dict: pages.refactor_planning.page_refactor_planning(data_dict.get("full_data", pd.DataFrame())),
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏
print(f"–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º: {current_page}")
print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {list(PAGES.keys())}")
print(f"–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ URL: {params.get('page')}")

if current_page in PAGES:
    print(f"–ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: {current_page}")
    PAGES[current_page](data_dict)
else:
    print(f"–û—à–∏–±–∫–∞: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {current_page} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ PAGES")
    st.error(f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {current_page} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")