# app.py ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ Streamlit —Å JSON-–Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∫—É—Ä—Å–∞:
–ü—Ä–æ–≥—Ä–∞–º–º–∞ -> –ú–æ–¥—É–ª—å -> –£—Ä–æ–∫ -> –ì–ó (–≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π) -> –ö–∞—Ä—Ç–æ—á–∫–∞
"""

import urllib.parse as ul
import streamlit as st
import os
import shutil
import auth

auth.init_auth()

import core
import pages
import pages.my_tasks
import pages.methodist_admin
import navigation_utils

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    "Course Quality Dashboard", 
    layout="wide",
    page_icon="üìä",
    initial_sidebar_state="expanded"
)

# –ü—Ä–∏–º–µ–Ω—è–µ–º CSS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∏ —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
st.markdown("""
<style>
    /* –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü */
    [data-testid="collapsedControl"] {
        display: none;
    }
    
    /* –°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ */
    [data-testid="stSidebarNav"] {
        display: none !important;
    }
    
    /* –°–∫—Ä—ã—Ç—å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ */
    [data-testid="stSidebarNavSeparator"] {
        display: none !important;
    }
    
    /* –ü—Ä–∏–∂–∞—Ç—å —Å–∞–π–¥–±–∞—Ä –∫ –∫—Ä–∞—é */
    section[data-testid="stSidebar"] {
        width: auto !important;
        max-width: 320px !important;
        margin-left: 0 !important;
        padding-left: 0 !important;
    }
    
    /* –£–±—Ä–∞—Ç—å –æ—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ */
    .css-1d391kg, .css-1v3fvcr {
        padding-left: 0 !important;
    }
    
    /* –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –º–µ—Ç—Ä–∏–∫ */
    div[data-testid="stMetric"] {
        background-color: rgba(28, 131, 225, 0.1);
        padding: 0.75rem;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
    }
    
    div[data-testid="stMetric"] label {
        color: #4da6ff !important; 
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricValue"] {
        color: #ffffff !important;  /* –±–µ–ª—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è */
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricDelta"] {
        color: inherit !important;  /* –Ω–∞—Å–ª–µ–¥—É–µ–º —Ü–≤–µ—Ç –¥–ª—è –¥–µ–ª—å—Ç—ã */
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ */
    .nav-link {
        text-decoration: none;
        color: #4da6ff;
        font-weight: 600;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        margin-right: 0.5rem;
    }
    
    .nav-link:hover {
        background-color: rgba(77, 166, 255, 0.1);
    }
    
    .nav-link.active {
        background-color: rgba(77, 166, 255, 0.2);
    }
    
    /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è iframe */
    iframe {
        border: none !important;
        padding: 0 !important;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ */
    div[data-testid="stSidebar"]::-webkit-scrollbar {
        width: 5px;
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 5px;
    }
    
    div[data-testid="stSidebar"]::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.3);
    }
    
    /* –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ Streamlit –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    div[data-testid="stSidebar"] div[data-testid="stMarkdown"] h3 {
        color: rgba(255, 255, 255, 0.7);
        font-size: 16px;
        font-weight: 600;
        margin-top: 20px;
        margin-bottom: 10px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
    div[data-testid="stButton"] button {
        border-radius: 4px;
        font-weight: bold;
        padding: 0.5rem 0.5rem;
        min-width: 40px;
        background-color: rgba(28, 131, 225, 0.1);
        border: 1px solid rgba(77, 166, 255, 0.3);
        transition: all 0.2s ease;
        font-size: 16px;
    }
    
    div[data-testid="stButton"] button:hover {
        background-color: rgba(28, 131, 225, 0.3);
        border: 1px solid rgba(77, 166, 255, 0.6);
    }
    
    div[data-testid="stButton"] button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background-color: rgba(28, 131, 225, 0.05);
        border: 1px solid rgba(77, 166, 255, 0.1);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–∞–Ω–µ–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
    .nav-container {
        margin-bottom: 10px;
        padding: 5px 0;
        border-bottom: 1px solid rgba(77, 166, 255, 0.1);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    .sidebar-nav-container {
        margin-bottom: 15px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è SVG –∏–∫–æ–Ω–æ–∫ –≤ –∫–Ω–æ–ø–∫–∞—Ö */
    div[data-testid="stButton"] button img {
        display: inline-block;
        vertical-align: middle;
    }
    
    /* –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Å–∞–π–¥–±–∞—Ä–µ */
    .stButton > button {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 36px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã */
    .sidebar-nav-container div[data-testid="stMarkdown"] {
        margin-top: 8px;
        text-align: center;
    }
</style>
""", unsafe_allow_html=True)

# –ö—ç—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ, –Ω–æ –Ω–µ engine
@st.cache_data(ttl=3600)  # –£–º–µ–Ω—å—à–∞–µ–º –≤—Ä–µ–º—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ 1 —á–∞—Å–∞
def load_cached_data(_engine):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –∫—ç—à–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    data = core.load_data(_engine)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—á–µ—Ç —É—Ä–æ–≤–Ω—è "–ø–æ–¥–ª–æ—Å—Ç–∏" –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    data["trickiness_level"] = data.apply(core.get_trickiness_level, axis=1)
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—É–ª—ã —Ä–∏—Å–∫–∞ —Å —É—á–µ—Ç–æ–º –ø–æ–¥–ª–æ—Å—Ç–∏ –≤–º–µ—Å—Ç–æ first_try
    data["risk"] = data.apply(core.risk_score, axis=1)
    
    return data

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
def set_filters_from_params(params):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL"""
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
    for filter_name in core.FILTERS:
        # –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä –µ—Å—Ç—å –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ
        if filter_name in params:
            st.session_state[f"filter_{filter_name}"] = params[filter_name]

# –°–æ–∑–¥–∞–µ–º engine –≤–Ω–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
engine = core.get_engine()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if not auth.check_authentication():
    auth.login_page(engine)
    st.stop()

data = load_cached_data(engine)

# ---------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ---------------------- #
params = st.query_params

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
navigation_utils.init_navigation_history()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
current_page = params.get("page", "overview")
# –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–∞—Ç—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –Ω–∞—à–∏–º –∫–ª—é—á–∞–º —Å—Ç—Ä–∞–Ω–∏—Ü
if current_page == "overview":
    current_page = "–û–±–∑–æ—Ä"
elif current_page == "programs":
    current_page = "–ü—Ä–æ–≥—Ä–∞–º–º—ã"
elif current_page == "modules":
    current_page = "–ú–æ–¥—É–ª–∏"
elif current_page == "lessons":
    current_page = "–£—Ä–æ–∫–∏"
elif current_page == "gz":
    current_page = "–ì–ó"
elif current_page == "cards":
    current_page = "–ö–∞—Ä—Ç–æ—á–∫–∏"
elif current_page == "admin":
    current_page = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
elif current_page == "my_tasks":
    current_page = "–ú–æ–∏ –∑–∞–¥–∞—á–∏"
elif current_page == "methodist_admin":
    current_page = "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
set_filters_from_params(params)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ card_id –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ä—Ç–æ—á–∫–∏
if "card_id" in params and current_page == "–ö–∞—Ä—Ç–æ—á–∫–∏":
    card_id = params["card_id"]
    st.session_state["selected_card_id"] = card_id
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏
    card_data = data[data.card_id == float(card_id)]
    if not card_data.empty:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
        if "filter_program" not in st.session_state or not st.session_state["filter_program"]:
            st.session_state["filter_program"] = card_data["program"].iloc[0]
        if "filter_module" not in st.session_state or not st.session_state["filter_module"]:
            st.session_state["filter_module"] = card_data["module"].iloc[0]
        if "filter_lesson" not in st.session_state or not st.session_state["filter_lesson"]:
            st.session_state["filter_lesson"] = card_data["lesson"].iloc[0]
        if "filter_gz" not in st.session_state or not st.session_state["filter_gz"]:
            st.session_state["filter_gz"] = card_data["gz"].iloc[0]

# ---------------------- sidebar & navigation ------------------------------ #
# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —Å–∞–π–¥–±–∞—Ä–∞
navigation_utils.sidebar_navigation()

# –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏—é —Å–∞–π–¥–±–∞—Ä–∞
pages.sidebar_filters(data, navigation_utils.create_page_link)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
auth.show_user_menu()

# –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∑–∞–¥–∞—á–∞–º –∏ –∞–¥–º–∏–Ω–∫–µ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ (–±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–µ—Å—Å–∏–∏)
st.sidebar.markdown("---")
if st.sidebar.button("üìù –ú–æ–∏ –∑–∞–¥–∞—á–∏", key="sidebar_my_tasks"):
    st.query_params = {"page": "my_tasks"}
    st.rerun()
if st.sidebar.button("üë®‚Äçüè´ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤", key="sidebar_methodist_admin"):
    st.query_params = {"page": "methodist_admin"}
    st.rerun()

# –°–ª–æ–≤–∞—Ä—å —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
PAGES = {
    "–û–±–∑–æ—Ä": pages.page_overview,
    "–ü—Ä–æ–≥—Ä–∞–º–º—ã": pages.page_programs,
    "–ú–æ–¥—É–ª–∏": pages.page_modules,
    "–£—Ä–æ–∫–∏": pages.page_lessons,
    "–ì–ó": lambda df: pages.page_gz(df, navigation_utils.create_page_link),  # –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫
    "–ö–∞—Ä—Ç–æ—á–∫–∏": lambda df: pages.page_cards(df, engine),
    "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏": pages.page_admin,
    "–ú–æ–∏ –∑–∞–¥–∞—á–∏": lambda df: pages.my_tasks.page_my_tasks(df, engine),
    "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–µ—Ç–æ–¥–∏—Å—Ç–æ–≤": lambda df: pages.methodist_admin.page_methodist_admin(df, engine),
}

# –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
st.session_state["page"] = current_page

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
PAGES[current_page](data)