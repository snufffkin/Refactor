# app.py ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ Streamlit (v2.0)
"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∫—É—Ä—Å–∞:
–ü—Ä–æ–≥—Ä–∞–º–º–∞ -> –ú–æ–¥—É–ª—å -> –£—Ä–æ–∫ -> –ì–ó (–≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω–∏–π) -> –ö–∞—Ä—Ç–æ—á–∫–∞
"""

import urllib.parse as ul
import streamlit as st

import core
import pages

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    "Course Quality Dashboard", 
    layout="wide",
    page_icon="üìä",
    initial_sidebar_state="expanded"
)

# –î–æ–±–∞–≤—å—Ç–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ st.set_page_config()

# –ü—Ä–∏–º–µ–Ω—è–µ–º CSS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∏ —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
st.markdown("""
<style>
    /* –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü */
    [data-testid="collapsedControl"] {
        display: none;
    }
    
    /* –°–∫—Ä—ã—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ */
    section[data-testid="stSidebar"] > div.element-container:first-child {
        visibility: hidden;
        height: 0;
        position: absolute;
    }
    
    /* –ü—Ä–∏–∂–∞—Ç—å —Å–∞–π–¥–±–∞—Ä –∫ –∫—Ä–∞—é */
    section[data-testid="stSidebar"] {
        width: 100% !important;
        margin-left: 0 !important;
        padding-left: 0 !important;
    }
    
    /* –£–±—Ä–∞—Ç—å –æ—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞ –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ */
    .css-1d391kg, .css-1v3fvcr {
        padding-left: 0 !important;
    }
    
    /* –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –º–µ—Ç—Ä–∏–∫ */
    div[data-testid="stMetric"] {
        background-color: rgba(28, 131, 225, 0.1);
        padding: 0.75rem;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
    }
    
    div[data-testid="stMetric"] label {
        color: #4da6ff !important; 
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricValue"] {
        color: #ffffff !important;  /* –±–µ–ª—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è */
    }
    
    div[data-testid="stMetric"] div[data-testid="stMetricDelta"] {
        color: inherit !important;  /* –Ω–∞—Å–ª–µ–¥—É–µ–º —Ü–≤–µ—Ç –¥–ª—è –¥–µ–ª—å—Ç—ã */
    }
</style>
""", unsafe_allow_html=True)

# –ö—ç—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ, –Ω–æ –Ω–µ engine
@st.cache_data(ttl=3600)  # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ 1 —á–∞—Å
def load_cached_data(_engine):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –∫—ç—à–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    data = core.load_data(_engine)
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—É–ª—ã —Ä–∏—Å–∫–∞
    data["risk"] = data.apply(core.risk_score, axis=1)
    return data

# –°–æ–∑–¥–∞–µ–º engine –≤–Ω–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
engine = core.get_engine()
data = load_cached_data(engine)

# ---------------------- query params (clickable links) -------------------- #
qry = st.query_params
if "level" in qry and "value" in qry:
    lvl, val = qry["level"], ul.unquote_plus(qry["value"])
    if lvl in core.FILTERS:
        st.session_state[f"filter_{lvl}"] = val
        core.reset_child(lvl)  # —Å–±—Ä–æ—Å–∏—Ç—å –¥–æ—á–µ—Ä–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã

        # –µ—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π –µ—â—ë –Ω–µ—Ç, —Å—Ç–∞–≤–∏–º –∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞
        if lvl == "module":
            if not st.session_state.get("filter_program"):
                prog = data.loc[data.module == val, "program"].mode().iat[0]
                st.session_state["filter_program"] = prog
        elif lvl == "lesson":
            if not st.session_state.get("filter_module"):
                mod = data.loc[data.lesson == val, "module"].mode().iat[0]
                st.session_state["filter_module"] = mod
            if not st.session_state.get("filter_program"):
                prog = data.loc[data.lesson == val, "program"].mode().iat[0]
                st.session_state["filter_program"] = prog
        elif lvl == "gz":
            # –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –ì–ó
            if not st.session_state.get("filter_lesson"):
                les = data.loc[data.gz == val, "lesson"].mode().iat[0]
                st.session_state["filter_lesson"] = les
            if not st.session_state.get("filter_module"):
                mod = data.loc[data.gz == val, "module"].mode().iat[0]
                st.session_state["filter_module"] = mod
            if not st.session_state.get("filter_program"):
                prog = data.loc[data.gz == val, "program"].mode().iat[0]
                st.session_state["filter_program"] = prog

        # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
        page_mapping = {
            "program": "–ü—Ä–æ–≥—Ä–∞–º–º—ã", 
            "module": "–ú–æ–¥—É–ª–∏", 
            "lesson": "–£—Ä–æ–∫–∏",
            "gz": "–ì–ó",
            "card": "–ö–∞—Ä—Ç–æ—á–∫–∏"
        }
        st.session_state["page"] = page_mapping.get(lvl, "–û–±–∑–æ—Ä")

    st.query_params.clear()
    st.rerun()

# ---------------------- sidebar & navigation ------------------------------ #
pages.sidebar_filters(data)

# –ú–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
PAGES = {
    "–û–±–∑–æ—Ä": pages.page_overview,
    "–ü—Ä–æ–≥—Ä–∞–º–º—ã": pages.page_programs,
    "–ú–æ–¥—É–ª–∏": pages.page_modules,
    "–£—Ä–æ–∫–∏": pages.page_lessons,
    "–ì–ó": pages.page_gz,
    "–ö–∞—Ä—Ç–æ—á–∫–∏": lambda df: pages.page_cards(df, engine),
}

choice = st.sidebar.radio(
    "–ù–∞–≤–∏–≥–∞—Ü–∏—è",
    list(PAGES.keys()),
    index=list(PAGES.keys()).index(st.session_state.get("page", "–û–±–∑–æ—Ä")),
)

st.session_state["page"] = choice

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
with st.sidebar:
    st.markdown("---")
    st.markdown("""
    ### –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    
    Course Quality Dashboard –ø–æ–º–æ–≥–∞–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –≤—ã—è–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–µ—Å—Ç–∞.
    
    **–í–µ—Ä—Å–∏—è 2.0**
    
    üìß [–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ](mailto:support@example.com)
    """)

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
PAGES[choice](data)